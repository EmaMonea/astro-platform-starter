---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const classifica = Object.values(import.meta.glob('./posts/blog/classifiche/*.md', { eager: true }));

for (let i = 0; i < posts.length; i++) {
    console.log(posts[i]);
}

/*const matchFrontMatter = matches.frontmatter;
const { title } = matchFrontMatter.title;*/
const explainer = `
An Astro website can go way beyond static pages - on the right platform.

Netlify supports not only [Streaming SSR](https://docs.astro.build/en/guides/server-side-rendering/#html-streaming) and fast [Edge Middleware](https://docs.astro.build/en/guides/middleware/), but also [on-demand revalidation](https://www.netlify.com/blog/cache-tags-and-purge-api-on-netlify/) and [stale-while-revalidate](https://www.netlify.com/blog/swr-and-fine-grained-cache-control/). 
Any page or data can be rebuilt only when needed, without site visitors ever getting a performance hit.
`;
---

<Layout title="Welcome to Astro.">
    <main>
        <h2>Main component</h2>
        <section>
            {posts.map((post) => <div class="post">{post.frontmatter.title}</div>)}
        </section>
    </main>
</Layout>
<style>
    main {
        height: 70%;
        background-color: aliceblue;
    }
    .post {
        padding: 5px;
        margin: 5px;
        border-radius: 5px;
        color: black;
        background-color: lightblue;
    }
    section {
        max-width: 300px;
    }
</style>
